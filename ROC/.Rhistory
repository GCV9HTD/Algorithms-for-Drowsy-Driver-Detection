plot(sens.ci, type="bars")
roc_plot = function(label, pred){
roc(label, pred)
roc_plot <- roc(label, pred,
percent=TRUE,
plot=TRUE, auc.polygon=TRUE, max.auc.polygon=TRUE, grid=TRUE,
print.auc=TRUE, show.thres=TRUE)
ci(roc_plot)
sens.ci <- ci.se(roc_plot, specificities=seq(0, 100, 5))
plot(roc_plot, type="shape", col="lightblue")
plot(roc_plot, type="bars")
return(sens.ci)
}
roc_plot = function(label, pred){
roc(label, pred)
roc_plot_temp <- roc(label, pred,
percent=TRUE,
plot=TRUE, auc.polygon=TRUE, max.auc.polygon=TRUE, grid=TRUE,
print.auc=TRUE, show.thres=TRUE)
ci(roc_plot_temp)
sens.ci <- ci.se(roc_plot_temp, specificities=seq(0, 100, 5))
plot(roc_plot_temp, type="shape", col="lightblue")
plot(roc_plot_temp, type="bars")
return(sens.ci)
}
roc_plot(custom_cnn$X0, custom_cnn$X1)
roc_plot = function(label, pred){
roc(label, pred)
roc_plot_temp <- roc(label, pred,
percent=TRUE,
plot=TRUE, auc.polygon=TRUE, max.auc.polygon=TRUE, grid=TRUE,
print.auc=TRUE, show.thres=TRUE)
ci(roc_plot_temp)
sens.ci <- ci.se(roc_plot_temp, specificities=seq(0, 100, 5))
plot(roc_plot_temp, type="shape", col="lightblue")
plot(roc_plot_temp, type="bars")
return( plot(roc_plot_temp, type="bars"))
}
roc_plot(custom_cnn$X0, custom_cnn$X1)
roc_plot = function(label, pred){
roc(label, pred)
roc_plot_temp <- roc(label, pred,
percent=TRUE,
plot=TRUE, auc.polygon=TRUE, max.auc.polygon=TRUE, grid=TRUE,
print.auc=TRUE, show.thres=TRUE)
ci(roc_plot_temp)
sens.ci <- ci.se(roc_plot_temp, specificities=seq(0, 100, 5))
temp2 = plot(roc_plot_temp, type="shape", col="lightblue")
plot(roc_plot_temp, type="bars")
return( temp2)
}
roc_plot(custom_cnn$X0, custom_cnn$X1)
roc(custom_cnn$X0, custom_cnn$X1)
custom_cnn_plot <- roc(custom_cnn$X0, custom_cnn$X1,
percent=TRUE,
plot=TRUE, auc.polygon=TRUE, max.auc.polygon=TRUE, grid=TRUE,
print.auc=TRUE, show.thres=TRUE)
ci(custom_cnn_plot)
sens.ci <- ci.se(custom_cnn_plot, specificities=seq(0, 100, 5))
plot(sens.ci, type="shape", col="lightblue")
plot(sens.ci, type="bars")
sens.ci <- ci.se(custom_cnn_plot, specificities=seq(0, 100, 5))
plot(sens.ci, type="shape", col="lightblue")
roc_plot = function(label, pred){
roc(label, pred)
roc_plot_temp <- roc(label, pred,
percent=TRUE,
plot=TRUE, auc.polygon=TRUE, max.auc.polygon=TRUE, grid=TRUE,
print.auc=TRUE, show.thres=TRUE)
ci(roc_plot_temp)
sens.ci <- ci.se(roc_plot_temp, specificities=seq(0, 100, 5))
return(plot(roc_plot_temp, type="shape", col="lightblue"))
}
roc_plot(custom_cnn$X0, custom_cnn$X1)
roc_plot = function(label, pred){
roc(label, pred)
roc_plot_temp <- roc(label, pred,
percent=TRUE,
plot=TRUE, auc.polygon=TRUE, max.auc.polygon=TRUE, grid=TRUE,
print.auc=TRUE, show.thres=TRUE)
return(roc_plot_temp)
}
roc_plot(custom_cnn$X0, custom_cnn$X1)
roc_plot(custom_cnn$X0, custom_cnn$X1)
ci(custom_cnn_plot)
sens.ci <- ci.se(custom_cnn_plot, specificities=seq(0, 100, 5))
plot(sens.ci, type="shape", col="lightblue")
rocobj <- roc(aSAH$outcome, aSAH$s100b)
rocobj2 <- roc(aSAH$outcome, aSAH$wfns)
library(ggplot2)
g <- ggroc(rocobj)
g
ggroc(rocobj, alpha = 0.5, colour = "red", linetype = 2, size = 2)
g + theme_minimal() + ggtitle("My ROC curve")
g2 <- ggroc(list(s100b=rocobj, wfns=rocobj2, ndka=roc(aSAH$outcome, aSAH$ndka)))
g2
roc_plot(custom_cnn$X0, custom_cnn$X1)
ci(custom_cnn_plot)
sens.ci <- ci.se(custom_cnn_plot, specificities=seq(0, 100, 5))
plot(sens.ci, type="shape", col="lightblue")
roc_plot(custom_lstm_cnn$X0, custom_lstm_cnn$X2)
vgg16_MTF = read.csv('roc_mtf_16_predicted.csv')
View(vgg16_MTF)
vgg16_MTF = vgg16_MTF[-1]
View(vgg16_MTF)
roc_plot(vgg16_MTF$X0, vgg16_MTF$X1)
vgg16_RP = read.csv('roc_rp_16_predicted.csv')
vgg16_RP = vgg16_RP[-1]
View(vgg16_RP)
roc_plot(vgg16_RP$X0, vgg16_RP$X1)
vgg19_MTF = read.csv('roc_mtf_19_predicted.csv')
vgg19_MTF = vgg19_MTF[-1]
#ROC
roc_plot(vgg19_MTF$X0, vgg19_MTF$X1)
#Predictions of VGG16 on RP
vgg19_RP = read.csv('roc_rp_19_predicted.csv')
vgg19_RP = vgg19_RP[-1]
#ROC
roc_plot(vgg19_RP$X0, vgg19_RP$X1)
rocobj <- roc(aSAH$outcome, aSAH$s100b)
rocobj2 <- roc(aSAH$outcome, aSAH$wfns)
library(ggplot2)
g <- ggroc(rocobj)
g
# with additional aesthetics:
ggroc(rocobj, alpha = 0.5, colour = "red", linetype = 2, size = 2)
# You can then your own theme, etc.
g + theme_minimal() + ggtitle("My ROC curve")
g2 <- ggroc(list(s100b=rocobj, wfns=rocobj2, ndka=roc(aSAH$outcome, aSAH$ndka)))
g2
g2 <- ggroc(list(custom_cnn_1,custom_lstm_cnn_1,vgg16_MTF_1,vgg_16_RP_1,vgg_19_MTF_1,vgg_19_RP_1))
g2
custom_cnn_1 = roc(custom_cnn$X0, custom_cnn$X1)
custom_lstm_cnn_1 = roc(custom_lstm_cnn$X0, custom_lstm_cnn$X2)
vgg16_MTF_1 = roc(vgg16_MTF$X0, vgg16_MTF$X1)
vgg_16_RP_1 = roc(vgg16_RP$X0, vgg16_RP$X1)
vgg_19_MTF_1 = roc(vgg19_MTF$X0, vgg19_MTF$X1)
vgg_19_RP_1 = roc(vgg19_RP$X0, vgg19_RP$X1)
g2 <- ggroc(list(custom_cnn_1,custom_lstm_cnn_1,vgg16_MTF_1,vgg_16_RP_1,vgg_19_MTF_1,vgg_19_RP_1))
g2
g2 + ggtitle("Roc plot of all models")
g2 <- ggroc(list(custom_cnn_1,custom_lstm_cnn_1,vgg16_MTF_1,vgg_16_RP_1,vgg_19_MTF_1,vgg_19_RP_1))
g2 + ggtitle("Roc plot of all models")
g2 <- ggroc(list(Custom_CNN = custom_cnn_1,custom_lstm_cnn_1,vgg16_MTF_1,vgg_16_RP_1,vgg_19_MTF_1,vgg_19_RP_1))
g2 + ggtitle("Roc plot of all models")
g2 <- ggroc(list(Custom = custom_cnn_1,custom_lstm_cnn_1,vgg16_MTF_1,vgg_16_RP_1,vgg_19_MTF_1,vgg_19_RP_1))
g2 + ggtitle("Roc plot of all models")
g2 <- ggroc(list(C = custom_cnn_1,custom_lstm_cnn_1,vgg16_MTF_1,vgg_16_RP_1,vgg_19_MTF_1,vgg_19_RP_1))
g2 + ggtitle("Roc plot of all models")
g2 <- ggroc(list(custom_cnn_1 = c,custom_lstm_cnn_1,vgg16_MTF_1,vgg_16_RP_1,vgg_19_MTF_1,vgg_19_RP_1))
g2 + ggtitle("Roc plot of all models")
g2 <- ggroc(list(custom_cnn_1,custom_lstm_cnn_1,vgg16_MTF_1,vgg_16_RP_1,vgg_19_MTF_1,vgg_19_RP_1))
g2 + ggtitle("Roc plot of all models")
data(aSAH)
rocobj <- roc(aSAH$outcome, aSAH$s100b)
rocobj2 <- roc(aSAH$outcome, aSAH$wfns)
library(ggplot2)
g <- ggroc(rocobj)
g
# with additional aesthetics:
ggroc(rocobj, alpha = 0.5, colour = "red", linetype = 2, size = 2)
# You can then your own theme, etc.
g + theme_minimal() + ggtitle("My ROC curve")
# Multiple curves:
g2 <- ggroc(list(s100b=rocobj, wfns=rocobj2, ndka=roc(aSAH$outcome, aSAH$ndka)))
g2
g2 <- ggroc(list(name1 = custom_cnn_1,custom_lstm_cnn_1,vgg16_MTF_1,vgg_16_RP_1,vgg_19_MTF_1,vgg_19_RP_1))
g2 + ggtitle("Roc plot of all models")
g2 <- ggroc(list(Custom_CNN = custom_cnn_1, Custom_lstm_cnn = custom_lstm_cnn_1, VGG16_MTF = vgg16_MTF_1,
VGG16_RP = vgg_16_RP_1, VGG19_MTF = vgg_19_MTF_1,VGG19_RP = vgg_19_RP_1))
g2 + ggtitle("Roc plot of all models")
g3 <- ggroc(roc.list, linetype=2)
g3
g4 <- ggroc(roc.list, aes="linetype", color="red")
g4
data(aSAH)
rocobj <- roc(aSAH$outcome, aSAH$s100b)
rocobj2 <- roc(aSAH$outcome, aSAH$wfns)
library(ggplot2)
g <- ggroc(rocobj)
g
# with additional aesthetics:
ggroc(rocobj, alpha = 0.5, colour = "red", linetype = 2, size = 2)
# You can then your own theme, etc.
g + theme_minimal() + ggtitle("My ROC curve")
# Multiple curves:
g2 <- ggroc(list(s100b=rocobj, wfns=rocobj2, ndka=roc(aSAH$outcome, aSAH$ndka)))
g2
g3 <- ggroc(roc.list, linetype=2)
g3
g2 <- ggroc(list(s100b=rocobj, wfns=rocobj2, ndka=roc(aSAH$outcome, aSAH$ndka)), aes="linetype", color="red")
g2
g2 <- ggroc(list(Custom_CNN = custom_cnn_1, Custom_lstm_cnn = custom_lstm_cnn_1, VGG16_MTF = vgg16_MTF_1,
VGG16_RP = vgg_16_RP_1, VGG19_MTF = vgg_19_MTF_1,VGG19_RP = vgg_19_RP_1), aes="linetype")
g2 + ggtitle("Roc plot of all models")
g2 <- ggroc(list(Custom_CNN = custom_cnn_1, Custom_lstm_cnn = custom_lstm_cnn_1, VGG16_MTF = vgg16_MTF_1,
VGG16_RP = vgg_16_RP_1, VGG19_MTF = vgg_19_MTF_1,VGG19_RP = vgg_19_RP_1))
g2 + ggtitle("Roc plot of all models")
ggroc(rocobj, alpha = 0.5, colour = "red", linetype = 2, size = 2)
# You can then your own theme, etc.
g + theme_minimal() + ggtitle("My ROC curve") + geom_text()
ggroc(rocobj, alpha = 0.5, colour = "red", linetype = 2, size = 2)
# You can then your own theme, etc.
g + theme_minimal() + ggtitle("My ROC curve")
g2 <- ggroc(list(Custom_CNN = custom_cnn_1, Custom_lstm_cnn = custom_lstm_cnn_1, VGG16_MTF = vgg16_MTF_1,
VGG16_RP = vgg_16_RP_1, VGG19_MTF = vgg_19_MTF_1,VGG19_RP = vgg_19_RP_1))
g2 + ggtitle("Roc plot of all models")
g2 <- ggroc(list(Custom_CNN = custom_cnn_1, Custom_lstm_cnn = custom_lstm_cnn_1, VGG16_MTF = vgg16_MTF_1,
VGG16_RP = vgg_16_RP_1, VGG19_MTF = vgg_19_MTF_1,VGG19_RP = vgg_19_RP_1))
g2 + ggtitle("Roc plot of all models")  annotate("text", x = .75, y = .25,
label = paste("AUC =", round(custom_cnn_1, 2)))
g2 <- ggroc(list(Custom_CNN = custom_cnn_1, Custom_lstm_cnn = custom_lstm_cnn_1, VGG16_MTF = vgg16_MTF_1,
VGG16_RP = vgg_16_RP_1, VGG19_MTF = vgg_19_MTF_1,VGG19_RP = vgg_19_RP_1))
g2 + ggtitle("Roc plot of all models") + annotate("text", x = .75, y = .25,
label = paste("AUC =", round(custom_cnn_1, 2)))
custom_cnn_1
custom_cnn_1$auc
custom_cnn_1$auc[1]
g2 <- ggroc(list(Custom_CNN = custom_cnn_1, Custom_lstm_cnn = custom_lstm_cnn_1, VGG16_MTF = vgg16_MTF_1,
VGG16_RP = vgg_16_RP_1, VGG19_MTF = vgg_19_MTF_1,VGG19_RP = vgg_19_RP_1))
g2 + ggtitle("Roc plot of all models") + annotate("text", x = .75, y = .25,
label = paste("AUC =", round(custom_cnn_1$auc[1], 2)))
D.cov <- rbinom(400, 1, .5)
gender <- c("Male", "Female")[rbinom(400, 1, .49) + 1]
M.diff <- rnorm(400, mean = D.cov, sd = ifelse(gender == "Male", .5, 1.5))
test.cov <- data.frame(D = D.cov, gender = gender, M = M.diff)
View(test.cov)
View(test.cov)
bygend <- ggplot(test.cov, aes(d = D, m = M, color = gender)) + geom_roc(show.legend = FALSE)
bygend <- ggplot(test.cov, aes(d = D, m = M, color = gender)) + geom_roc(show.legend = FALSE)
direct_label(bygend) + style_roc()
g2 + ggtitle("Roc plot of all models")
+ annotate("text", x = .75, y = .25, label = paste("AUC =", round(custom_cnn_1$auc[1], 2))) +
annotate("text", x = .75, y = .25, label = paste("AUC =", round(custom_cnn_1$auc[1], 2)))
g2 + ggtitle("Roc plot of all models") + annotate("text", x = .75, y = .25,
label = paste("AUC =", round(custom_cnn_1$auc[1], 2))) +
annotate("text", x = .75, y = .25,
label = paste("AUC =", round(custom_cnn_1$auc[1], 2)))
g2 + ggtitle("Roc plot of all models") + annotate("text", x = .75, y = .25,
label = paste("AUC =", round(custom_cnn_1$auc[1], 2))) +
annotate("text", x = .75, y = .25,
label = paste("AUC =", round(custom_lstm_cnn_1$auc[1], 2)))
g2 <- ggroc(list(Custom_CNN = custom_cnn_1, Custom_lstm_cnn = custom_lstm_cnn_1, VGG16_MTF = vgg16_MTF_1,
VGG16_RP = vgg_16_RP_1, VGG19_MTF = vgg_19_MTF_1,VGG19_RP = vgg_19_RP_1))
g2 + ggtitle("Roc plot of all models")
set.seed(1)
dat <- data.frame(x = rep(1:5), y = rep(1:10),
z = factor(sample(seq(0.01, 0.05, 0.01), 100, TRUE)))
View(dat)
ggplot(dat) +
geom_tile(aes(x = x, y = y, fill = z)) +
scale_fill_discrete(labels = paste(levels(dat$z), table(dat$z)))
g2 <- ggroc(list(Custom_CNN = custom_cnn_1, Custom_lstm_cnn = custom_lstm_cnn_1, VGG16_MTF = vgg16_MTF_1,
VGG16_RP = vgg_16_RP_1, VGG19_MTF = vgg_19_MTF_1,VGG19_RP = vgg_19_RP_1))
g2 + ggtitle("Roc plot of all models")
g2 <- ggroc(list(custom_cnn_1$auc[1] = custom_cnn_1, Custom_lstm_cnn = custom_lstm_cnn_1, VGG16_MTF = vgg16_MTF_1,
VGG16_RP = vgg_16_RP_1, VGG19_MTF = vgg_19_MTF_1,VGG19_RP = vgg_19_RP_1))
g2 + ggtitle("Roc plot of all models")
# Multiple curves:
g2 <- ggroc(list(Custom_CNN = custom_cnn_1, Custom_lstm_cnn = custom_lstm_cnn_1, VGG16_MTF = vgg16_MTF_1,
VGG16_RP = vgg_16_RP_1, VGG19_MTF = vgg_19_MTF_1,VGG19_RP = vgg_19_RP_1))
g2 + ggtitle("Roc plot of all models")
g2 <- ggroc(list(Custom_CNN_ = custom_cnn_1, Custom_lstm_cnn = custom_lstm_cnn_1, VGG16_MTF = vgg16_MTF_1,
VGG16_RP = vgg_16_RP_1, VGG19_MTF = vgg_19_MTF_1,VGG19_RP = vgg_19_RP_1))
g2 + ggtitle("Roc plot of all models")
g2 <- ggroc(list(Custom_CNN~ = custom_cnn_1, Custom_lstm_cnn = custom_lstm_cnn_1, VGG16_MTF = vgg16_MTF_1,
VGG16_RP = vgg_16_RP_1, VGG19_MTF = vgg_19_MTF_1,VGG19_RP = vgg_19_RP_1))
g2 + ggtitle("Roc plot of all models")
custom_cnn_1
g2 <- ggroc(list(Custom_CNN_62.95 = custom_cnn_1, Custom_lstm_cnn = custom_lstm_cnn_1, VGG16_MTF = vgg16_MTF_1,
VGG16_RP = vgg_16_RP_1, VGG19_MTF = vgg_19_MTF_1,VGG19_RP = vgg_19_RP_1))
g2 + ggtitle("Roc plot of all models")
custom_lstm_cnn_1
vgg16_MTF_1
vgg_16_RP_1
vgg_19_MTF_1
vgg_19_RP_1
g2 <- ggroc(list(Custom_CNN_62.95 = custom_cnn_1, Custom_lstm_cnn_75.98 = custom_lstm_cnn_1, VGG16_MTF_66.61 = vgg16_MTF_1,
VGG16_RP_70.75 = vgg_16_RP_1, VGG19_MTF_70 = vgg_19_MTF_1, VGG19_RP_66.3 = vgg_19_RP_1))
g2 + ggtitle("Roc plot of all models")
library(pROC)
library(ggplot2)
#creating a function to plot roc with CI
roc_plot = function(label, pred){
roc(label, pred)
roc_plot_temp <- roc(label, pred,
percent=TRUE,
plot=TRUE, auc.polygon=TRUE, max.auc.polygon=TRUE, grid=TRUE,
print.auc=TRUE, show.thres=TRUE)
return(roc_plot_temp)
}
#Location with prediction files
getwd()
setwd('/Users/apple/Desktop/FINAL_FINAL/ROC')
#Predictions of custom_cnn
custom_cnn = read.csv('custom_cnn_predicted.csv')
custom_cnn = custom_cnn[-1]
#ROC
roc_plot(custom_cnn$X0, custom_cnn$X1)
ci(custom_cnn_plot)
sens.ci <- ci.se(custom_cnn_plot, specificities=seq(0, 100, 5))
plot(sens.ci, type="shape", col="lightblue")
library(pROC)
library(ggplot2)
#creating a function to plot roc with CI
roc_plot = function(label, pred){
roc(label, pred)
roc_plot_temp <- roc(label, pred,
percent=TRUE,
plot=TRUE, auc.polygon=TRUE, max.auc.polygon=TRUE, grid=TRUE,
print.auc=TRUE, show.thres=TRUE)
return(roc_plot_temp)
}
#Location with prediction files
getwd()
setwd('/Users/apple/Desktop/FINAL_FINAL/ROC')
#Predictions of custom_cnn
custom_cnn = read.csv('custom_cnn_predicted.csv')
custom_cnn = custom_cnn[-1]
#ROC
roc_plot(custom_cnn$X0, custom_cnn$X1)
#Predictions of custom LSTM-CNN
custom_lstm_cnn = read.csv('custom_cnn_lstm_predicted.csv')
custom_lstm_cnn = custom_lstm_cnn[-1]
#ROC
roc_plot(custom_lstm_cnn$X0, custom_lstm_cnn$X2)
#Predictions of VGG16 on MTF
vgg16_MTF = read.csv('roc_mtf_16_predicted.csv')
vgg16_MTF = vgg16_MTF[-1]
#ROC
roc_plot(vgg16_MTF$X0, vgg16_MTF$X1)
#Predictions of VGG16 on RP
vgg16_RP = read.csv('roc_rp_16_predicted.csv')
vgg16_RP = vgg16_RP[-1]
#ROC
roc_plot(vgg16_RP$X0, vgg16_RP$X1)
#Predictions of VGG19 on MTF
vgg19_MTF = read.csv('roc_mtf_19_predicted.csv')
vgg19_MTF = vgg19_MTF[-1]
#ROC
roc_plot(vgg19_MTF$X0, vgg19_MTF$X1)
#Predictions of VGG16 on RP
vgg19_RP = read.csv('roc_rp_19_predicted.csv')
vgg19_RP = vgg19_RP[-1]
#ROC
roc_plot(vgg19_RP$X0, vgg19_RP$X1)
roc_plot(custom_cnn$X0, custom_cnn$X1) +  ggtitle("Roc plot of all models")
library(pROC)
library(ggplot2)
#creating a function to plot roc with CI
roc_plot = function(label, pred){
roc(label, pred)
roc_plot_temp <- roc(label, pred,
percent=TRUE,
# arguments for plot
plot=TRUE, auc.polygon=TRUE, max.auc.polygon=TRUE, grid=TRUE,
print.auc=TRUE, show.thres=TRUE,
# arguments for ci
ci=TRUE, boot.n=100, ci.alpha=0.9, stratified=FALSE)
return(roc_plot_temp)
}
getwd()
setwd('/Users/apple/Desktop/FINAL_FINAL/ROC')
#Predictions of custom_cnn
custom_cnn = read.csv('custom_cnn_predicted.csv')
custom_cnn = custom_cnn[-1]
roc_plot(custom_cnn$X0, custom_cnn$X1)
sens.ci <- ci.se(roc_plot(custom_cnn$X0, custom_cnn$X1), specificities=seq(0, 100, 5))
plot(sens.ci, type="shape", col="lightblue")
plot(sens.ci, type="bars")
library(pROC)
library(ggplot2)
#creating a function to plot roc with CI
roc_plot = function(label, pred){
roc(label, pred)
roc_plot_temp <- roc(label, pred,
percent=TRUE,
# arguments for plot
plot=TRUE, auc.polygon=TRUE, max.auc.polygon=TRUE, grid=TRUE,
print.auc=TRUE, show.thres=TRUE)
return(roc_plot_temp)
}
#Location with prediction files
getwd()
setwd('/Users/apple/Desktop/FINAL_FINAL/ROC')
#Predictions of custom_cnn
custom_cnn = read.csv('custom_cnn_predicted.csv')
custom_cnn = custom_cnn[-1]
#ROC
roc_plot(custom_cnn$X0, custom_cnn$X1)
sens.ci <- ci.se(roc_plot(custom_cnn$X0, custom_cnn$X1), specificities=seq(0, 100, 5))
plot(sens.ci, type="shape", col="lightblue")
plot(sens.ci, type="bars")
custom_lstm_cnn = read.csv('custom_cnn_lstm_predicted.csv')
custom_lstm_cnn = custom_lstm_cnn[-1]
#ROC
roc_plot(custom_lstm_cnn$X0, custom_lstm_cnn$X2)
sens.ci <- ci.se(roc_plot(custom_lstm_cnn$X0, custom_lstm_cnn$X2), specificities=seq(0, 100, 5))
plot(sens.ci, type="shape", col="lightblue")
plot(sens.ci, type="bars")
vgg16_MTF = read.csv('roc_mtf_16_predicted.csv')
vgg16_MTF = vgg16_MTF[-1]
#ROC
roc_plot(vgg16_MTF$X0, vgg16_MTF$X1)
sens.ci <- ci.se(roc_plot(vgg16_MTF$X0, vgg16_MTF$X1), specificities=seq(0, 100, 5))
plot(sens.ci, type="shape", col="lightblue")
plot(sens.ci, type="bars")
vgg16_RP = read.csv('roc_rp_16_predicted.csv')
vgg16_RP = vgg16_RP[-1]
#ROC
roc_plot(vgg16_RP$X0, vgg16_RP$X1)
sens.ci <- ci.se(roc_plot(vgg16_RP$X0, vgg16_RP$X1), specificities=seq(0, 100, 5))
plot(sens.ci, type="shape", col="lightblue")
plot(sens.ci, type="bars")
vgg19_MTF = read.csv('roc_mtf_19_predicted.csv')
vgg19_MTF = vgg19_MTF[-1]
#ROC
roc_plot(vgg19_MTF$X0, vgg19_MTF$X1)
sens.ci <- ci.se(roc_plot(vgg19_MTF$X0, vgg19_MTF$X1), specificities=seq(0, 100, 5))
plot(sens.ci, type="shape", col="lightblue")
plot(sens.ci, type="bars")
#Predictions of VGG16 on RP
vgg19_RP = read.csv('roc_rp_19_predicted.csv')
vgg19_RP = vgg19_RP[-1]
#ROC
roc_plot(vgg19_RP$X0, vgg19_RP$X1)
sens.ci <- ci.se(roc_plot(vgg19_RP$X0, vgg19_RP$X1), specificities=seq(0, 100, 5))
plot(sens.ci, type="shape", col="lightblue")
plot(sens.ci, type="bars")
custom_cnn_1 = roc(custom_cnn$X0, custom_cnn$X1)
custom_lstm_cnn_1 = roc(custom_lstm_cnn$X0, custom_lstm_cnn$X2)
vgg16_MTF_1 = roc(vgg16_MTF$X0, vgg16_MTF$X1)
vgg_16_RP_1 = roc(vgg16_RP$X0, vgg16_RP$X1)
vgg_19_MTF_1 = roc(vgg19_MTF$X0, vgg19_MTF$X1)
vgg_19_RP_1 = roc(vgg19_RP$X0, vgg19_RP$X1)
# Multiple curves:
g2 <- ggroc(list(Custom_CNN_62.95 = custom_cnn_1, Custom_lstm_cnn_75.98 = custom_lstm_cnn_1, VGG16_MTF_66.61 = vgg16_MTF_1,
VGG16_RP_70.75 = vgg_16_RP_1, VGG19_MTF_70 = vgg_19_MTF_1, VGG19_RP_66.3 = vgg_19_RP_1))
g2 + ggtitle("Roc plot of all models")
library(pROC)
library(ggplot2)
#creating a function to plot roc with CI
roc_plot = function(label, pred){
roc(label, pred)
roc_plot_temp <- roc(label, pred,
percent=TRUE,
# arguments for plot
plot=TRUE, auc.polygon=TRUE, max.auc.polygon=TRUE, grid=TRUE,
print.auc=TRUE, show.thres=TRUE)
return(roc_plot_temp)
}
#Location with prediction files
getwd()
setwd('/Users/apple/Desktop/FINAL_FINAL/ROC')
#Predictions of custom_cnn
custom_cnn = read.csv('custom_cnn_predicted.csv')
custom_cnn = custom_cnn[-1]
#ROC
roc_plot(custom_cnn$X0, custom_cnn$X1)
sens.ci <- ci.se(roc_plot(custom_cnn$X0, custom_cnn$X1), specificities=seq(0, 100, 5))
plot(sens.ci, type="shape", col="lightblue")
plot(sens.ci, type="bars")
#Predictions of custom LSTM-CNN
custom_lstm_cnn = read.csv('custom_cnn_lstm_predicted.csv')
custom_lstm_cnn = custom_lstm_cnn[-1]
#ROC
roc_plot(custom_lstm_cnn$X0, custom_lstm_cnn$X2)
sens.ci <- ci.se(roc_plot(custom_lstm_cnn$X0, custom_lstm_cnn$X2), specificities=seq(0, 100, 5))
plot(sens.ci, type="shape", col="lightblue")
plot(sens.ci, type="bars")
#Predictions of VGG16 on MTF
vgg16_MTF = read.csv('roc_mtf_16_predicted.csv')
vgg16_MTF = vgg16_MTF[-1]
#ROC
roc_plot(vgg16_MTF$X0, vgg16_MTF$X1)
sens.ci <- ci.se(roc_plot(vgg16_MTF$X0, vgg16_MTF$X1), specificities=seq(0, 100, 5))
plot(sens.ci, type="shape", col="lightblue")
plot(sens.ci, type="bars")
#Predictions of VGG16 on RP
vgg16_RP = read.csv('roc_rp_16_predicted.csv')
vgg16_RP = vgg16_RP[-1]
#ROC
roc_plot(vgg16_RP$X0, vgg16_RP$X1)
sens.ci <- ci.se(roc_plot(vgg16_RP$X0, vgg16_RP$X1), specificities=seq(0, 100, 5))
plot(sens.ci, type="shape", col="lightblue")
plot(sens.ci, type="bars")
#Predictions of VGG19 on MTF
vgg19_MTF = read.csv('roc_mtf_19_predicted.csv')
vgg19_MTF = vgg19_MTF[-1]
#ROC
roc_plot(vgg19_MTF$X0, vgg19_MTF$X1)
sens.ci <- ci.se(roc_plot(vgg19_MTF$X0, vgg19_MTF$X1), specificities=seq(0, 100, 5))
plot(sens.ci, type="shape", col="lightblue")
plot(sens.ci, type="bars")
#Predictions of VGG16 on RP
vgg19_RP = read.csv('roc_rp_19_predicted.csv')
vgg19_RP = vgg19_RP[-1]
#ROC
roc_plot(vgg19_RP$X0, vgg19_RP$X1)
sens.ci <- ci.se(roc_plot(vgg19_RP$X0, vgg19_RP$X1), specificities=seq(0, 100, 5))
plot(sens.ci, type="shape", col="lightblue")
plot(sens.ci, type="bars")
custom_cnn_1 = roc(custom_cnn$X0, custom_cnn$X1)
custom_lstm_cnn_1 = roc(custom_lstm_cnn$X0, custom_lstm_cnn$X2)
vgg16_MTF_1 = roc(vgg16_MTF$X0, vgg16_MTF$X1)
vgg_16_RP_1 = roc(vgg16_RP$X0, vgg16_RP$X1)
vgg_19_MTF_1 = roc(vgg19_MTF$X0, vgg19_MTF$X1)
vgg_19_RP_1 = roc(vgg19_RP$X0, vgg19_RP$X1)
# Multiple curves:
g2 <- ggroc(list(Custom_CNN_62.95 = custom_cnn_1, Custom_lstm_cnn_75.98 = custom_lstm_cnn_1, VGG16_MTF_66.61 = vgg16_MTF_1,
VGG16_RP_70.75 = vgg_16_RP_1, VGG19_MTF_70 = vgg_19_MTF_1, VGG19_RP_66.3 = vgg_19_RP_1))
g2 + ggtitle("Roc plot of all models")
